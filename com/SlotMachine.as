package com {	import flash.display.MovieClip;		import flash.events.MouseEvent;	import flash.events.Event;	import flash.utils.setTimeout;	import flash.utils.Timer;	import flash.events.TimerEvent;	import com.greensock.BlitMask;	import pointroll.trackActivity;		public class SlotMachine extends MovieClip{						private const NUM_WHEELS:uint = 3;		private var wheelArray:Array = new Array();		private var spinning:uint = 0;		private var blitMask:BlitMask;		public var spinResults:Array = new Array()				public var firstSlotLocked:Boolean = false;				public function SlotMachine() {			for(var i:uint = 0; i < NUM_WHEELS; i++){				var wheel:SlotWheel = new SlotWheel(this, i)				wheel.addEventListener(SlotEvent.SPIN_COMPLETE, spinCompleteHandler)				wheel.name = 'W'+i				wheel.x = 83*i;				wheelArray.push(wheel)				addChildAt(wheel, 1)								blitMask = new BlitMask(wheel,wheel.x,wheel.y,wheel.width,SlotWheel.ITEM_DISTANCE,true,true,0xffffff,true);				upBTN.buttonMode = downBTN.buttonMode = lockBTN.buttonMode = true;								upBTN.addEventListener(MouseEvent.CLICK, clickHandler)				downBTN.addEventListener(MouseEvent.CLICK, clickHandler)				lockBTN.addEventListener(MouseEvent.CLICK, clickHandler)			}		}				public function spinNumberPattern(arr:Array):void{			if(spinning == 0){				spinResults = new Array()							for(var i:uint = 0; i < NUM_WHEELS; i++){					spinning++					wheelArray[i].spinToSlot(arr[i])				}			}		}				private function spinCompleteHandler(e:SlotEvent):void{			spinning--			spinResults.push(e.data)			if(spinning == 0){				if(spinResults.length == NUM_WHEELS){					dispatchEvent(new SlotEvent(SlotEvent.SPIN_COMPLETE, spinResults))				}			}		}				public function getWheelSlot(i:int):int{			var r:int = (i < NUM_WHEELS)? wheelArray[i].slot : 0;			return r;		}				public function randomNumber(min:Number, max:Number):int {			return Math.floor(Math.random() * (1 + max - min) + min);		}				public function unLock():void		{			trace(">>SlotMachine:unLock");			lockBTN.gotoAndStop(1);			firstSlotLocked = false;			wheelArray[0].locked = firstSlotLocked;		}		//		public function spinRandomly(e:Event = null):void{//			if(spinning == 0){//				spinResults = new Array();//				for(var i:uint = 0; i < NUM_WHEELS; i++){//					spinning ++//					wheelArray[i].spinRandomly();//				}				//			}//		}				private function clickHandler(e:Event):void{			switch(e.target.name){				case 'upBTN':				case 'downBTN':					if(spinning == 0){						var a:int = (e.target.name == 'upBTN')? 1 : 2;						var f:Function = wheelArray[0][e.target.name.split('BTN').join('')]						pointroll.trackActivity(a)						spinResults = new Array();						spinning = 1						f()					}					break				case 'lockBTN':					var fr:int = (lockBTN.currentFrame == 1)? 2 : 1;					pointroll.trackActivity(lockBTN.currentFrame+2)					lockBTN.gotoAndStop(fr)					firstSlotLocked = !firstSlotLocked;					wheelArray[0].locked = firstSlotLocked;			}		}	}}