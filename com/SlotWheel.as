package com{	import flash.events.Event;	import flash.events.TimerEvent;	import flash.utils.Timer;	import flash.display.MovieClip;	import flash.utils.setTimeout	import com.greensock.TweenLite;	import com.greensock.TweenMax;	public class SlotWheel extends MovieClip {				public static const ITEM_DISTANCE:uint = 110;		public static const NUM_SPINS:uint = 1;		public var spinning:Boolean = false;		public var slot:int = 0;		public var locked:Boolean = false;		private var slotMachine_mc:SlotMachine;				private var numItems:int;		public function SlotWheel(machine:SlotMachine, frame:uint):void {			slotMachine_mc = machine;			gotoAndStop(frame + 1)			numItems = Math.ceil(height / ITEM_DISTANCE)		}		public function spinRandomly():void {			var d:Number = randomDistance();			spinByDistance(d, 1 + (currentFrame*.5))		}				public function spinToSlot(i:uint):void{			var newSlot:int = i;			if(newSlot > numItems){				newSlot = newSlot % numItems			}						var slotChange:int = (newSlot >= slot)? newSlot - slot : numItems - slot + newSlot;						//trace(numItems,'|',slot,'-->', newSlot,'|',slotChange)						spinByDistance((slotChange + (numItems*NUM_SPINS)) * ITEM_DISTANCE, 1 + (currentFrame*.5))		}				private function spinByDistance(distance:int, time:Number):void{			if(!spinning && !locked){				spinning = true;				TweenMax.to(this, time, {y:String(distance), onComplete:declareFinished});							}else if(locked){				setTimeout(declareFinished, 10);			}		}						private function randomDistance():Number{			var distance:Number = (slotMachine_mc.randomNumber(0, numItems) + (numItems*NUM_SPINS))* ITEM_DISTANCE			return distance;		}		function declareFinished() {			var totalHeight:int = numItems * ITEM_DISTANCE;						y = (y >= 0)? y % totalHeight : totalHeight + y % totalHeight;									calculateSlot();			spinning = false;			dispatchEvent(new SlotEvent(SlotEvent.SPIN_COMPLETE, slot));		}				private function calculateSlot():void{			slot = (y/ITEM_DISTANCE) % numItems		}				public function lock():void{			locked = true;		}				public function unlock():void{			locked = false;		}				public function up():void{			spinByDistance(ITEM_DISTANCE, .5);		}				public function down():void{			spinByDistance(-ITEM_DISTANCE, .5);		}	}}