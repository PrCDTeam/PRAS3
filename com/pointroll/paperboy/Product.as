package com.pointroll.paperboy{	import flash.utils.Dictionary;	import flash.display.MovieClip;	import flash.display.Bitmap;	import flash.display.Sprite;	import flash.display.Loader;		import flash.events.MouseEvent;	import flash.events.Event;	import flash.events.IOErrorEvent;		import flash.net.URLRequest;		import com.pointroll.paperboy.events.ProductEvents;	import com.pointroll.utils.PrUtils;		import flash.system.LoaderContext;		import flash.text.TextField;	import flash.text.TextFieldAutoSize;		import pointroll.trackActivityWithNoun;	//import com.greensock.*;	//import com.greensock.plugins.*;		//TweenPlugin.activate([BlurFilterPlugin,DropShadowFilterPlugin]);		public class Product extends MovieClip {		protected var _dictionary:Dictionary;		protected var _productDictionary:Dictionary;		private var _clickArea:Sprite;		private var _loader:Loader;		private var _imageHolder:MovieClip;				private var _xmlList:XMLList;		private var _loaderContext:LoaderContext;		public function Product(){			getAllObjects();			//defaultLogoVisibility = false;		}		// PRIVATE		private function getAllObjects():void {			_dictionary = new Dictionary();			for (var i:uint = 0; i < this.numChildren; i++) {				//trace(this.getChildAt(i).name);				_dictionary[this.getChildAt(i).name] = this.getChildAt(i);			}		}		private function buildClickArea():void {			_clickArea = new Sprite();			addChild(_clickArea);			_clickArea.graphics.beginFill(0x0000FF);			_clickArea.graphics.drawRect(0,0,bg.width,bg.height);			_clickArea.graphics.endFill();			_clickArea.alpha = 0;			_clickArea.buttonMode = _clickArea.useHandCursor = true;			_clickArea.addEventListener(MouseEvent.CLICK, onProducClick);			_clickArea.addEventListener(MouseEvent.ROLL_OVER, onProducRollOverOut);			_clickArea.addEventListener(MouseEvent.ROLL_OUT, onProducRollOverOut);			_clickArea.name = "clickArea";			pinterest.addEventListener(MouseEvent.CLICK, onProducClick);			this.setChildIndex (_clickArea , this.numChildren - 1 );			this.setChildIndex (pinterest , this.numChildren - 1 );		}		public function buildProductData(xl:XMLList):void {			_productDictionary = new Dictionary();			for each (var item:XML in xl) {				for each (var attr:XML in item.attributes()) {					_productDictionary[attr.name().toString()] = attr.valueOf().toString();				}			}		}		public function setProductTextField(n:String, t:String, align:String="LEFT",truncate:Boolean=false):void {			//trace("setProductTextField: " + n + " " + t + " " + align);			switch(align){				case "LEFT":					 _dictionary[n].autoSize = TextFieldAutoSize.LEFT;					break;				case "RIGHT":					 _dictionary[n].autoSize = TextFieldAutoSize.RIGHT;				break;				case "CENTER":					 _dictionary[n].autoSize = TextFieldAutoSize.CENTER;				break;			}			if(truncate){				PrUtils.truncateTextToFit(_dictionary[n], t);			}			else{				_dictionary[n].text = t;			}		}		public function setProductImage(i:String):void {			if (! _imageHolder) {				return trace("ERROR:> A MovieClip needs to be set to hold the image.");			}			_loader = new Loader();			_loaderContext = new LoaderContext(true);			_loader.contentLoaderInfo.addEventListener(Event.COMPLETE, onImageLoadComplete);			_loader.contentLoaderInfo.addEventListener(IOErrorEvent.IO_ERROR, onImageLoadError);			_loader.load(new URLRequest(i),_loaderContext);		}		public function setImageHolder(h:String):void {			trace("_dictionary[h]: " + _dictionary[h]);			_imageHolder = _dictionary[h];		}		public function set defaultLogoVisibility(b:Boolean):void{			//defaultLogo.visible = b;		}				// EVENTS		private function onProducClick(e:MouseEvent):void {			trace(e.currentTarget.name);			switch(e.currentTarget.name){				case "clickArea":					 _productDictionary["pinterest"] = false;				break;				case "pinterest":					 _productDictionary["pinterest"] = true;				break;							}			dispatchEvent(new ProductEvents(ProductEvents.ON_PRODUCT_CLICK, _productDictionary));		}		private function onProducRollOverOut(e:MouseEvent):void{			switch(e.type){				case "rollOver":				//#543019				//#0033FF					 getStageObject("description").textColor = 0x0033FF;				break;				case "rollOut":					 getStageObject("description").textColor = 0x543019;				break;			}		}		private function onImageLoadComplete(e:Event):void {			//trace("onImageLoadComlete");			var _thumb:Bitmap = Bitmap(_loader.content);			_thumb.smoothing = true;			_imageHolder.addChild(_thumb);			//PrUtils.scaleImageProportionally(_imageHolder,148,140);			dispatchEvent(new Event("onProductImageLoad"));			//var border:MovieClip = rect(_loader.content.x,_loader.content.y,_loader.content.width,_loader.content.height,1,0xC6BBA7)			//_imageHolder.addChild(border);			//TweenLite.to(_imageHolder, 0,{dropShadowFilter:{color:0xC6BBA7, alpha:1, angle:45, blurX:10, blurY:10, distance:5}});			centerImage()			buildClickArea();		}				private function rect(_x:Number=0,_y:Number=0,_wid:Number=10,_hei:Number=10,_alpha:Number=1,_color:uint=0x000000):MovieClip{			var _clip:MovieClip = new MovieClip();			var _rect:Sprite = new Sprite();			_rect.graphics.lineStyle(1,_color);			_rect.graphics.drawRect(0,0,_wid,_hei);			_rect.x = _x;			_rect.y = _y;			_clip.addChild(_rect);			return _clip;		}						private function onImageLoadError(e:IOErrorEvent):void {			trace("onImageLoadError " + e);			dispatchEvent(new Event("onProductImageLoadError"));			defaultLogoVisibility = true;			buildClickArea();		}		private function centerImage():void{			//trace("centerImage: " + _imageHolder.width + " " + _imageHolder.height);			_imageHolder.x = (bg.width/2)-(_imageHolder.width/2);			//holder.pHolder.y = (holder.bg.height/2)-(holder.pHolder.height/2);		}		public function alignText(copy1:TextField, copy2:TextField):void{			copy2.y = copy1.y + copy1.textHeight+3;		}		// GETTERS & SETTERS		public function getProductDataField(key:String):String{			//trace("getProductDataField: " + _productDictionary[key]);			return _productDictionary[key];		}		public function getStageObject(key:String):*{			return _dictionary[key];		}		public function set imageHolder(i:MovieClip):void{			_imageHolder = i;		}	}}